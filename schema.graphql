# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type Studio {
  id: ID!
  title: String
  content: Studio_content_Document
  photos(
    where: StudioMediaWhereInput! = {}
    orderBy: [StudioMediaOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [StudioMedia!]
  photosCount(where: StudioMediaWhereInput! = {}): Int
  video: String
  file: AzureStorageFileFieldOutput
}

type Studio_content_Document {
  document(hydrateRelationships: Boolean! = false): JSON!
}

interface AzureStorageFileFieldOutput {
  filename: String!
  filesize: Int!
  ref: String!
  url: String!
}

input StudioWhereUniqueInput {
  id: ID
}

type AzureStorageFileFieldOutputType implements AzureStorageFileFieldOutput {
  filename: String!
  filesize: Int!
  ref: String!
  url: String!
}

input StudioWhereInput {
  AND: [StudioWhereInput!]
  OR: [StudioWhereInput!]
  NOT: [StudioWhereInput!]
  id: IDFilter
  title: StringFilter
  photos: StudioMediaManyRelationFilter
  video: StringNullableFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input StudioMediaManyRelationFilter {
  every: StudioMediaWhereInput
  some: StudioMediaWhereInput
  none: StudioMediaWhereInput
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input StudioOrderByInput {
  id: OrderDirection
  title: OrderDirection
  video: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input StudioUpdateInput {
  title: String
  content: JSON
  photos: StudioMediaRelateToManyForUpdateInput
  video: String
  file: AzureStorageFileFieldInput
}

input StudioMediaRelateToManyForUpdateInput {
  disconnect: [StudioMediaWhereUniqueInput!]
  set: [StudioMediaWhereUniqueInput!]
  create: [StudioMediaCreateInput!]
  connect: [StudioMediaWhereUniqueInput!]
}

input AzureStorageFileFieldInput {
  upload: Upload
  ref: String
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

input StudioUpdateArgs {
  where: StudioWhereUniqueInput!
  data: StudioUpdateInput!
}

input StudioCreateInput {
  title: String
  content: JSON
  photos: StudioMediaRelateToManyForCreateInput
  video: String
  file: AzureStorageFileFieldInput
}

input StudioMediaRelateToManyForCreateInput {
  create: [StudioMediaCreateInput!]
  connect: [StudioMediaWhereUniqueInput!]
}

type StudioMedia {
  id: ID!
  studioImages(
    where: StudioWhereInput! = {}
    orderBy: [StudioOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Studio!]
  studioImagesCount(where: StudioWhereInput! = {}): Int
  image: CloudinaryImage_File
  imageName: String
  altText: String
}

type CloudinaryImage_File {
  id: ID
  filename: String
  originalFilename: String
  mimetype: String
  encoding: String
  publicUrl: String
  publicUrlTransformed(transformation: CloudinaryImageFormat): String
}

"""
Mirrors the formatting options [Cloudinary provides](https://cloudinary.com/documentation/image_transformation_reference).
All options are strings as they ultimately end up in a URL.
"""
input CloudinaryImageFormat {
  """
   Rewrites the filename to be this pretty string. Do not include `/` or `.`
  """
  prettyName: String
  width: String
  height: String
  crop: String
  aspect_ratio: String
  gravity: String
  zoom: String
  x: String
  y: String
  format: String
  fetch_format: String
  quality: String
  radius: String
  angle: String
  effect: String
  opacity: String
  border: String
  background: String
  overlay: String
  underlay: String
  default_image: String
  delay: String
  color: String
  color_space: String
  dpr: String
  page: String
  density: String
  flags: String
  transformation: String
}

input StudioMediaWhereUniqueInput {
  id: ID
}

input StudioMediaWhereInput {
  AND: [StudioMediaWhereInput!]
  OR: [StudioMediaWhereInput!]
  NOT: [StudioMediaWhereInput!]
  id: IDFilter
  studioImages: StudioManyRelationFilter
  imageName: StringFilter
  altText: StringFilter
}

input StudioManyRelationFilter {
  every: StudioWhereInput
  some: StudioWhereInput
  none: StudioWhereInput
}

input StudioMediaOrderByInput {
  id: OrderDirection
  imageName: OrderDirection
  altText: OrderDirection
}

input StudioMediaUpdateInput {
  studioImages: StudioRelateToManyForUpdateInput
  image: Upload
  imageName: String
  altText: String
}

input StudioRelateToManyForUpdateInput {
  disconnect: [StudioWhereUniqueInput!]
  set: [StudioWhereUniqueInput!]
  create: [StudioCreateInput!]
  connect: [StudioWhereUniqueInput!]
}

input StudioMediaUpdateArgs {
  where: StudioMediaWhereUniqueInput!
  data: StudioMediaUpdateInput!
}

input StudioMediaCreateInput {
  studioImages: StudioRelateToManyForCreateInput
  image: Upload
  imageName: String
  altText: String
}

input StudioRelateToManyForCreateInput {
  create: [StudioCreateInput!]
  connect: [StudioWhereUniqueInput!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type Mutation {
  createStudio(data: StudioCreateInput!): Studio
  createStudios(data: [StudioCreateInput!]!): [Studio]
  updateStudio(where: StudioWhereUniqueInput!, data: StudioUpdateInput!): Studio
  updateStudios(data: [StudioUpdateArgs!]!): [Studio]
  deleteStudio(where: StudioWhereUniqueInput!): Studio
  deleteStudios(where: [StudioWhereUniqueInput!]!): [Studio]
  createStudioMedia(data: StudioMediaCreateInput!): StudioMedia
  createStudioMedias(data: [StudioMediaCreateInput!]!): [StudioMedia]
  updateStudioMedia(
    where: StudioMediaWhereUniqueInput!
    data: StudioMediaUpdateInput!
  ): StudioMedia
  updateStudioMedias(data: [StudioMediaUpdateArgs!]!): [StudioMedia]
  deleteStudioMedia(where: StudioMediaWhereUniqueInput!): StudioMedia
  deleteStudioMedias(where: [StudioMediaWhereUniqueInput!]!): [StudioMedia]
}

type Query {
  studios(
    where: StudioWhereInput! = {}
    orderBy: [StudioOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [Studio!]
  studio(where: StudioWhereUniqueInput!): Studio
  studiosCount(where: StudioWhereInput! = {}): Int
  studioMedias(
    where: StudioMediaWhereInput! = {}
    orderBy: [StudioMediaOrderByInput!]! = []
    take: Int
    skip: Int! = 0
  ): [StudioMedia!]
  studioMedia(where: StudioMediaWhereUniqueInput!): StudioMedia
  studioMediasCount(where: StudioMediaWhereInput! = {}): Int
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  isOrderable: Boolean!
  isFilterable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
