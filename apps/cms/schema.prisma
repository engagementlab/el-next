// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model About {
  id      String @id @default(cuid())
  name    String @unique @default("About Page")
  content Json   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Event {
  id               String    @id @default(cuid())
  name             String    @default("")
  key              String    @unique @default("")
  createdDate      DateTime?
  enabled          Boolean   @default(true)
  thumbnail        Json?
  thumbAltText     String    @default("")
  eventDate        DateTime
  registrationLink String    @default("")
  address          String    @default("")
  blurb            String    @default("")
  content          Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Initiative {
  id     String  @id @default(cuid())
  name   String  @unique @default("Initiative Name")
  intro  String  @default("")
  slides Slide[] @relation("Initiative_slides")
}

model InitiativesLanding {
  id          String @id @default(cuid())
  name        String @unique @default("Initiatives Landing Page")
  description String @default("")
}

model NewsItem {
  id                  String    @id @default(cuid())
  title               String    @default("")
  key                 String    @unique @default("")
  createdDate         DateTime?
  enabled             Boolean   @default(true)
  thumbnail           Json?
  thumbAltText        String    @default("")
  publishDate         DateTime
  source              String    @default("")
  linkHelper_html     String    @default("<p>Need HTML!</p>")
  linkHelper_iconType icon      @default(help)
  externalLink        String    @default("")
  blurb               String    @default("")
  body                Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
}

model Person {
  id                String          @id @default(cuid())
  name              String          @unique @default("")
  key               String          @default("")
  createdDate       DateTime?
  enabled           Boolean         @default(true)
  title             String          @default("")
  category          String?
  image             Json?
  content           Json            @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  studioInstructors Semester[]      @relation("Person_studioInstructors")
  learningPartners  Semester[]      @relation("Person_learningPartners")
  studioStudents    Semester[]      @relation("Person_studioStudents")
  studioStaff       Semester[]      @relation("Person_studioStaff")
  projectTeam       StudioProject[] @relation("Person_projectTeam")
}

model Semester {
  id               String            @id @default(cuid())
  name             String            @default("")
  key              String            @unique @default("")
  createdDate      DateTime?
  enabled          Boolean           @default(true)
  studio           Studio?           @relation("Semester_studio", fields: [studioId], references: [id])
  studioId         String?           @map("studio")
  type             SemesterTypeType?
  courseNumber     String            @default("")
  instructors      Person[]          @relation("Person_studioInstructors")
  description      String            @default("")
  partners         Json              @default("[]")
  coCreation       Json              @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  impact           Json              @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  projects         StudioProject[]   @relation("Semester_projects")
  learningPartners Person[]          @relation("Person_learningPartners")
  studioStudents   Person[]          @relation("Person_studioStudents")
  studioStaff      Person[]          @relation("Person_studioStaff")
  contact          String            @default("")

  @@index([studioId])
}

model Slide {
  id               String       @id @default(cuid())
  slideshowSlides  Slideshow[]  @relation("Slide_slideshowSlides")
  initiativeSlides Initiative[] @relation("Initiative_slides")
  image            Json?
  helper_html      String       @default("<p>Need HTML!</p>")
  helper_iconType  icon         @default(help)
  altText          String       @default("")
  caption          String       @default("")
  videoId          String       @default("")
}

model Slideshow {
  id     String  @id @default(cuid())
  name   String  @default("")
  key    String  @unique @default("")
  slides Slide[] @relation("Slide_slideshowSlides")
}

model Studio {
  id          String     @id @default(cuid())
  name        String     @default("")
  key         String     @unique @default("")
  createdDate DateTime?
  blurb       String     @default("")
  semesters   Semester[] @relation("Semester_studio")
  initiatives Json       @default("[]")
}

model StudioProject {
  id               String                      @id @default(cuid())
  name             String                      @default("")
  key              String                      @unique @default("")
  createdDate      DateTime?
  enabled          Boolean                     @default(true)
  thumbnail        Json?
  thumbailAltText  String                      @default("")
  shortDescription String                      @default("")
  blurb            String                      @default("")
  initiative       StudioProjectInitiativeType @default(GunViolence)
  partners         Json                        @default("[]")
  coCreation       Json                        @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  impact           Json                        @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  team             Person[]                    @relation("Person_projectTeam")
  semester         Semester[]                  @relation("Semester_projects")
}

enum icon {
  help
  info
}

enum SemesterTypeType {
  current
  upcoming
}

enum StudioProjectInitiativeType {
  GunViolence
  Climate
}
